<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.arkoisystems.arkoicompiler.ArkoiCompilerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-02-04T22:55:46" hostname="msi-ubuntu" time="0.088">
  <properties/>
  <testcase name="runCompiler" classname="com.arkoisystems.arkoicompiler.ArkoiCompilerTest" time="0.088"/>
  <system-out><![CDATA[The lexical analysis took 12.026024ms for all classes (2 in total)
{
  "tokenType": "STRING_LITERAL",
  "tokenContent": "%s , %s",
  "start": 166,
  "end": 175
}
]]></system-out>
  <system-err><![CDATA[Couldn't compile the file. Please see the stacktrace for errors:
{
  "importStorage": [],
  "variableStorage": [],
  "functionStorage": [
    {
      "functionAnnotationASTs": [],
      "functionNameToken": {
        "tokenType": "IDENTIFIER",
        "tokenContent": "main",
        "start": 37,
        "end": 41
      },
      "functionReturnTypeAST": {
        "typeKind": "INTEGER",
        "isArray": false,
        "astType": "TYPE",
        "start": 0,
        "end": 0
      },
      "functionArgumentASTs": [
        {
          "argumentNameIdentifier": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "args",
            "start": 47,
            "end": 51
          },
          "argumentType": {
            "typeKind": "STRING",
            "isArray": true,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "astType": "ARGUMENT_DEFINITION",
          "start": 47,
          "end": 0
        }
      ],
      "blockAST": {
        "blockType": "BLOCK",
        "blockStorage": [],
        "astType": "BLOCK",
        "start": 63,
        "end": 113
      },
      "astType": "FUNCTION_DEFINITION",
      "start": 33,
      "end": 113
    }
  ],
  "astType": "ROOT",
  "start": 0,
  "end": 254
}
{
  "abstractToken": {
    "symbolType": "PERCENT",
    "tokenType": "SYMBOL",
    "tokenContent": "%",
    "start": 176,
    "end": 177
  },
  "message": "Couldn't parse the \"function invoke\" statement because an expression isn't followed by an comma or an closing parenthesis.",
  "start": 176,
  "end": 177
}
{
  "parser": {
    "childName": "AbstractOperableAST<?>"
  },
  "message": "Couldn't parse the expression because an error occurred during the parsing of the operable.",
  "start": 176,
  "end": 177
}
{
  "parser": {
    "childName": "AbstractExpressionAST"
  },
  "message": "Couldn't parse the BlockAST because an error occurred during the parsing of the expression.",
  "start": 156,
  "end": 177
}
{
  "parser": {
    "childName": "BlockAST"
  },
  "message": "Couldn't parse the \"function definition\" statement because an error occurred during parsing of the block/inlined block.",
  "start": 115,
  "end": 177
}
{
  "parser": {
    "childName": "AbstractStatementAST"
  },
  "message": "Couldn't parse the \"AbstractStatementAST\" because an error occurred.",
  "start": 176,
  "end": 177
}
]]></system-err>
</testsuite>
