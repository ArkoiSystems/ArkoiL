{
  "content": "@native[default]\r\nfun println<>(message: string);\r\n",
  "lexicalAnalyzer": {
    "errorHandler": {},
    "tokens": [
      {
        "separatorType": "AT_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": "@",
        "start": 0,
        "end": 1
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "native",
        "start": 1,
        "end": 7
      },
      {
        "separatorType": "OPENING_BRACKET",
        "tokenType": "SEPARATOR",
        "tokenContent": "[",
        "start": 7,
        "end": 8
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "default",
        "start": 8,
        "end": 15
      },
      {
        "separatorType": "CLOSING_BRACKET",
        "tokenType": "SEPARATOR",
        "tokenContent": "]",
        "start": 15,
        "end": 16
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 18,
        "end": 21
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "println",
        "start": 22,
        "end": 29
      },
      {
        "separatorType": "LESS_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": "<",
        "start": 29,
        "end": 30
      },
      {
        "separatorType": "GREATER_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": ">",
        "start": 30,
        "end": 31
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 31,
        "end": 32
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "message",
        "start": 32,
        "end": 39
      },
      {
        "separatorType": "COLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ":",
        "start": 39,
        "end": 40
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 41,
        "end": 47
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 47,
        "end": 48
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 48,
        "end": 49
      },
      {
        "tokenType": "END_OF_FILE",
        "tokenContent": "@native[default]\r\nfun println<>(message: string);\r\n",
        "start": 0,
        "end": 51
      }
    ]
  },
  "syntaxAnalyzer": {
    "errorHandler": {},
    "position": 15,
    "rootAST": {
      "importStorage": [],
      "variableStorage": [],
      "functionStorage": [
        {
          "functionAnnotationASTs": [
            {
              "annotationName": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "native",
                "start": 1,
                "end": 7
              },
              "annotationArguments": [
                {
                  "tokenType": "IDENTIFIER",
                  "tokenContent": "default",
                  "start": 8,
                  "end": 15
                }
              ],
              "astType": "ANNOTATION",
              "start": 0,
              "end": 16
            }
          ],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "println",
            "start": 22,
            "end": 29
          },
          "functionReturnTypeAST": {
            "typeKind": "VOID",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [
            {
              "argumentNameIdentifier": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "message",
                "start": 32,
                "end": 39
              },
              "argumentType": {
                "typeKind": "STRING",
                "isArray": false,
                "astType": "TYPE",
                "start": 0,
                "end": 0
              },
              "astType": "ARGUMENT_DEFINITION",
              "start": 0,
              "end": 0
            }
          ],
          "astType": "FUNCTION_DEFINITION",
          "start": 18,
          "end": 0
        }
      ],
      "astType": "ROOT",
      "start": 0,
      "end": 51
    }
  }
}{
  "content": "fun test<string>() = \"Okay\"; \n",
  "lexicalAnalyzer": {
    "errorHandler": {},
    "tokens": [
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 0,
        "end": 3
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test",
        "start": 4,
        "end": 8
      },
      {
        "separatorType": "LESS_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": "<",
        "start": 8,
        "end": 9
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 9,
        "end": 15
      },
      {
        "separatorType": "GREATER_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": ">",
        "start": 15,
        "end": 16
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 16,
        "end": 17
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 17,
        "end": 18
      },
      {
        "assignmentOperatorType": "ASSIGNMENT",
        "tokenType": "ASSIGNMENT_OPERATOR",
        "tokenContent": "=",
        "start": 19,
        "end": 20
      },
      {
        "tokenType": "STRING",
        "tokenContent": "Okay",
        "start": 21,
        "end": 27
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 27,
        "end": 28
      },
      {
        "tokenType": "END_OF_FILE",
        "tokenContent": "fun test<string>() = \"Okay\"; \n",
        "start": 0,
        "end": 30
      }
    ]
  },
  "syntaxAnalyzer": {
    "errorHandler": {},
    "position": 10,
    "rootAST": {
      "importStorage": [],
      "variableStorage": [],
      "functionStorage": [
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "test",
            "start": 4,
            "end": 8
          },
          "functionReturnTypeAST": {
            "typeKind": "STRING",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [],
          "blockAST": {
            "blockType": "INLINE",
            "blockStorage": [],
            "astType": "BLOCK",
            "start": 19,
            "end": 0
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 0,
          "end": 0
        }
      ],
      "astType": "ROOT",
      "start": 0,
      "end": 30
    }
  }
}{
  "content": "fun hello<string>() = \"Hello World!\";\n",
  "lexicalAnalyzer": {
    "errorHandler": {},
    "tokens": [
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 0,
        "end": 3
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "hello",
        "start": 4,
        "end": 9
      },
      {
        "separatorType": "LESS_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": "<",
        "start": 9,
        "end": 10
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 10,
        "end": 16
      },
      {
        "separatorType": "GREATER_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": ">",
        "start": 16,
        "end": 17
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 17,
        "end": 18
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 18,
        "end": 19
      },
      {
        "assignmentOperatorType": "ASSIGNMENT",
        "tokenType": "ASSIGNMENT_OPERATOR",
        "tokenContent": "=",
        "start": 20,
        "end": 21
      },
      {
        "tokenType": "STRING",
        "tokenContent": "Hello World!",
        "start": 22,
        "end": 36
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 36,
        "end": 37
      },
      {
        "tokenType": "END_OF_FILE",
        "tokenContent": "fun hello<string>() = \"Hello World!\";\n",
        "start": 0,
        "end": 38
      }
    ]
  },
  "syntaxAnalyzer": {
    "errorHandler": {},
    "position": 10,
    "rootAST": {
      "importStorage": [],
      "variableStorage": [],
      "functionStorage": [
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "hello",
            "start": 4,
            "end": 9
          },
          "functionReturnTypeAST": {
            "typeKind": "STRING",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [],
          "blockAST": {
            "blockType": "INLINE",
            "blockStorage": [],
            "astType": "BLOCK",
            "start": 20,
            "end": 0
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 0,
          "end": 0
        }
      ],
      "astType": "ROOT",
      "start": 0,
      "end": 38
    }
  }
}{
  "content": "import \"first_class\";\nimport \"second_class\" named SecondClass;\n\nfun main<int>(args: string[]) {\n    println():\n        testIt(new FirstClass()),\n        testIt(new SecondClass())),\n        testIt(new Main());\n}\n\nfun testIt<string>(object: object) {\n    if(object is FirstClass || object is SecondClass)\n        return(firstClass: firstClass.test(), secondClass: secondClass.hello());\n    return null;\n}\n",
  "lexicalAnalyzer": {
    "errorHandler": {},
    "tokens": [
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "import",
        "start": 0,
        "end": 6
      },
      {
        "tokenType": "STRING",
        "tokenContent": "first_class",
        "start": 7,
        "end": 20
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 20,
        "end": 21
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "import",
        "start": 22,
        "end": 28
      },
      {
        "tokenType": "STRING",
        "tokenContent": "second_class",
        "start": 29,
        "end": 43
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "named",
        "start": 44,
        "end": 49
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "SecondClass",
        "start": 50,
        "end": 61
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 61,
        "end": 62
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 64,
        "end": 67
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "main",
        "start": 68,
        "end": 72
      },
      {
        "separatorType": "LESS_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": "<",
        "start": 72,
        "end": 73
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "int",
        "start": 73,
        "end": 76
      },
      {
        "separatorType": "GREATER_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": ">",
        "start": 76,
        "end": 77
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 77,
        "end": 78
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "args",
        "start": 78,
        "end": 82
      },
      {
        "separatorType": "COLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ":",
        "start": 82,
        "end": 83
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 84,
        "end": 90
      },
      {
        "separatorType": "OPENING_BRACKET",
        "tokenType": "SEPARATOR",
        "tokenContent": "[",
        "start": 90,
        "end": 91
      },
      {
        "separatorType": "CLOSING_BRACKET",
        "tokenType": "SEPARATOR",
        "tokenContent": "]",
        "start": 91,
        "end": 92
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 92,
        "end": 93
      },
      {
        "separatorType": "OPENING_BRACE",
        "tokenType": "SEPARATOR",
        "tokenContent": "{",
        "start": 94,
        "end": 95
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "println",
        "start": 100,
        "end": 107
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 107,
        "end": 108
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 108,
        "end": 109
      },
      {
        "separatorType": "COLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ":",
        "start": 109,
        "end": 110
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "testIt",
        "start": 119,
        "end": 125
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 125,
        "end": 126
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "new",
        "start": 126,
        "end": 129
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "FirstClass",
        "start": 130,
        "end": 140
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 140,
        "end": 141
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 141,
        "end": 142
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 142,
        "end": 143
      },
      {
        "separatorType": "COMMA",
        "tokenType": "SEPARATOR",
        "tokenContent": ",",
        "start": 143,
        "end": 144
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "testIt",
        "start": 153,
        "end": 159
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 159,
        "end": 160
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "new",
        "start": 160,
        "end": 163
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "SecondClass",
        "start": 164,
        "end": 175
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 175,
        "end": 176
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 176,
        "end": 177
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 177,
        "end": 178
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 178,
        "end": 179
      },
      {
        "separatorType": "COMMA",
        "tokenType": "SEPARATOR",
        "tokenContent": ",",
        "start": 179,
        "end": 180
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "testIt",
        "start": 189,
        "end": 195
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 195,
        "end": 196
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "new",
        "start": 196,
        "end": 199
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "Main",
        "start": 200,
        "end": 204
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 204,
        "end": 205
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 205,
        "end": 206
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 206,
        "end": 207
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 207,
        "end": 208
      },
      {
        "separatorType": "CLOSING_BRACE",
        "tokenType": "SEPARATOR",
        "tokenContent": "}",
        "start": 209,
        "end": 210
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 212,
        "end": 215
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "testIt",
        "start": 216,
        "end": 222
      },
      {
        "separatorType": "LESS_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": "<",
        "start": 222,
        "end": 223
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 223,
        "end": 229
      },
      {
        "separatorType": "GREATER_THAN_SIGN",
        "tokenType": "SEPARATOR",
        "tokenContent": ">",
        "start": 229,
        "end": 230
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 230,
        "end": 231
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "object",
        "start": 231,
        "end": 237
      },
      {
        "separatorType": "COLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ":",
        "start": 237,
        "end": 238
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "object",
        "start": 239,
        "end": 245
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 245,
        "end": 246
      },
      {
        "separatorType": "OPENING_BRACE",
        "tokenType": "SEPARATOR",
        "tokenContent": "{",
        "start": 247,
        "end": 248
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "if",
        "start": 253,
        "end": 255
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 255,
        "end": 256
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "object",
        "start": 256,
        "end": 262
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "is",
        "start": 263,
        "end": 265
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "FirstClass",
        "start": 266,
        "end": 276
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "object",
        "start": 280,
        "end": 286
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "is",
        "start": 287,
        "end": 289
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "SecondClass",
        "start": 290,
        "end": 301
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 301,
        "end": 302
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "return",
        "start": 311,
        "end": 317
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 317,
        "end": 318
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "firstClass",
        "start": 318,
        "end": 328
      },
      {
        "separatorType": "COLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ":",
        "start": 328,
        "end": 329
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "firstClass",
        "start": 330,
        "end": 340
      },
      {
        "separatorType": "PERIOD",
        "tokenType": "SEPARATOR",
        "tokenContent": ".",
        "start": 340,
        "end": 341
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test",
        "start": 341,
        "end": 345
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 345,
        "end": 346
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 346,
        "end": 347
      },
      {
        "separatorType": "COMMA",
        "tokenType": "SEPARATOR",
        "tokenContent": ",",
        "start": 347,
        "end": 348
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "secondClass",
        "start": 349,
        "end": 360
      },
      {
        "separatorType": "COLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ":",
        "start": 360,
        "end": 361
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "secondClass",
        "start": 362,
        "end": 373
      },
      {
        "separatorType": "PERIOD",
        "tokenType": "SEPARATOR",
        "tokenContent": ".",
        "start": 373,
        "end": 374
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "hello",
        "start": 374,
        "end": 379
      },
      {
        "separatorType": "OPENING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": "(",
        "start": 379,
        "end": 380
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 380,
        "end": 381
      },
      {
        "separatorType": "CLOSING_PARENTHESIS",
        "tokenType": "SEPARATOR",
        "tokenContent": ")",
        "start": 381,
        "end": 382
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 382,
        "end": 383
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "return",
        "start": 388,
        "end": 394
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "null",
        "start": 395,
        "end": 399
      },
      {
        "separatorType": "SEMICOLON",
        "tokenType": "SEPARATOR",
        "tokenContent": ";",
        "start": 399,
        "end": 400
      },
      {
        "separatorType": "CLOSING_BRACE",
        "tokenType": "SEPARATOR",
        "tokenContent": "}",
        "start": 401,
        "end": 402
      },
      {
        "tokenType": "END_OF_FILE",
        "tokenContent": "import \"first_class\";\nimport \"second_class\" named SecondClass;\n\nfun main<int>(args: string[]) {\n    println():\n        testIt(new FirstClass()),\n        testIt(new SecondClass())),\n        testIt(new Main());\n}\n\nfun testIt<string>(object: object) {\n    if(object is FirstClass || object is SecondClass)\n        return(firstClass: firstClass.test(), secondClass: secondClass.hello());\n    return null;\n}\n",
        "start": 0,
        "end": 403
      }
    ]
  },
  "syntaxAnalyzer": {
    "errorHandler": {},
    "position": 94,
    "rootAST": {
      "importStorage": [
        {
          "importFilePathToken": {
            "tokenType": "STRING",
            "tokenContent": "first_class",
            "start": 7,
            "end": 20
          },
          "importNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "first_class",
            "start": -1,
            "end": -1
          },
          "astType": "IMPORT_STATEMENT_AST",
          "start": 0,
          "end": 0
        },
        {
          "importFilePathToken": {
            "tokenType": "STRING",
            "tokenContent": "second_class",
            "start": 29,
            "end": 43
          },
          "importNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "SecondClass",
            "start": 50,
            "end": 61
          },
          "astType": "IMPORT_STATEMENT_AST",
          "start": 22,
          "end": 0
        }
      ],
      "variableStorage": [],
      "functionStorage": [
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "main",
            "start": 68,
            "end": 72
          },
          "functionReturnTypeAST": {
            "typeKind": "INTEGER",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [
            {
              "argumentNameIdentifier": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "args",
                "start": 78,
                "end": 82
              },
              "argumentType": {
                "typeKind": "STRING",
                "isArray": true,
                "astType": "TYPE",
                "start": 0,
                "end": 0
              },
              "astType": "ARGUMENT_DEFINITION",
              "start": 0,
              "end": 0
            }
          ],
          "blockAST": {
            "blockType": "BLOCK",
            "blockStorage": [],
            "astType": "BLOCK",
            "start": 94,
            "end": 0
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 64,
          "end": 0
        },
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "testIt",
            "start": 216,
            "end": 222
          },
          "functionReturnTypeAST": {
            "typeKind": "STRING",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [
            {
              "argumentNameIdentifier": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "object",
                "start": 231,
                "end": 237
              },
              "argumentType": {
                "typeKind": "OTHER",
                "isArray": false,
                "astType": "TYPE",
                "start": 0,
                "end": 0
              },
              "astType": "ARGUMENT_DEFINITION",
              "start": 0,
              "end": 0
            }
          ],
          "blockAST": {
            "blockType": "BLOCK",
            "blockStorage": [],
            "astType": "BLOCK",
            "start": 247,
            "end": 0
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 212,
          "end": 0
        }
      ],
      "astType": "ROOT",
      "start": 0,
      "end": 403
    }
  }
}