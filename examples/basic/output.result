{
  "content": "import \"test\"; \n\nvar test_1 = test.test();\nvar test_2 = this.greeting();\n\n# this method gets invoked first\nfun main<int>(args: string[]) {\n    this.print_greet(test_1);\n    return (20 + 10 * 5) * 2;\n}\n\nfun print_greet<>(test_argument: string) = println(\"%s , %s\" % [test_2, test_argument]);\n\nfun greeting<string>() = \"Hello World\";\n",
  "lexicalAnalyzer": {
    "errorHandler": {},
    "tokens": [
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "import",
        "start": 0,
        "end": 6
      },
      {
        "tokenType": "STRING_LITERAL",
        "tokenContent": "test",
        "start": 7,
        "end": 13
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 13,
        "end": 14
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "var",
        "start": 17,
        "end": 20
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test_1",
        "start": 21,
        "end": 27
      },
      {
        "symbolType": "EQUAL",
        "tokenType": "SYMBOL",
        "tokenContent": "=",
        "start": 28,
        "end": 29
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test",
        "start": 30,
        "end": 34
      },
      {
        "symbolType": "PERIOD",
        "tokenType": "SYMBOL",
        "tokenContent": ".",
        "start": 34,
        "end": 35
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test",
        "start": 35,
        "end": 39
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 39,
        "end": 40
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 40,
        "end": 41
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 41,
        "end": 42
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "var",
        "start": 43,
        "end": 46
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test_2",
        "start": 47,
        "end": 53
      },
      {
        "symbolType": "EQUAL",
        "tokenType": "SYMBOL",
        "tokenContent": "=",
        "start": 54,
        "end": 55
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "this",
        "start": 56,
        "end": 60
      },
      {
        "symbolType": "PERIOD",
        "tokenType": "SYMBOL",
        "tokenContent": ".",
        "start": 60,
        "end": 61
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "greeting",
        "start": 61,
        "end": 69
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 69,
        "end": 70
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 70,
        "end": 71
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 71,
        "end": 72
      },
      {
        "tokenType": "COMMENT",
        "tokenContent": "# this method gets invoked first",
        "start": 74,
        "end": 106
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 107,
        "end": 110
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "main",
        "start": 111,
        "end": 115
      },
      {
        "symbolType": "LESS_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": "<",
        "start": 115,
        "end": 116
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "int",
        "start": 116,
        "end": 119
      },
      {
        "symbolType": "GREATER_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": ">",
        "start": 119,
        "end": 120
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 120,
        "end": 121
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "args",
        "start": 121,
        "end": 125
      },
      {
        "symbolType": "COLON",
        "tokenType": "SYMBOL",
        "tokenContent": ":",
        "start": 125,
        "end": 126
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 127,
        "end": 133
      },
      {
        "symbolType": "OPENING_BRACKET",
        "tokenType": "SYMBOL",
        "tokenContent": "[",
        "start": 133,
        "end": 134
      },
      {
        "symbolType": "CLOSING_BRACKET",
        "tokenType": "SYMBOL",
        "tokenContent": "]",
        "start": 134,
        "end": 135
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 135,
        "end": 136
      },
      {
        "symbolType": "OPENING_BRACE",
        "tokenType": "SYMBOL",
        "tokenContent": "{",
        "start": 137,
        "end": 138
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "this",
        "start": 143,
        "end": 147
      },
      {
        "symbolType": "PERIOD",
        "tokenType": "SYMBOL",
        "tokenContent": ".",
        "start": 147,
        "end": 148
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "print_greet",
        "start": 148,
        "end": 159
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 159,
        "end": 160
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test_1",
        "start": 160,
        "end": 166
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 166,
        "end": 167
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 167,
        "end": 168
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "return",
        "start": 173,
        "end": 179
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 180,
        "end": 181
      },
      {
        "numberType": "INTEGER",
        "tokenType": "NUMBER_LITERAL",
        "tokenContent": "20",
        "start": 181,
        "end": 183
      },
      {
        "symbolType": "PLUS",
        "tokenType": "SYMBOL",
        "tokenContent": "+",
        "start": 184,
        "end": 185
      },
      {
        "numberType": "INTEGER",
        "tokenType": "NUMBER_LITERAL",
        "tokenContent": "10",
        "start": 186,
        "end": 188
      },
      {
        "symbolType": "ASTERISK",
        "tokenType": "SYMBOL",
        "tokenContent": "*",
        "start": 189,
        "end": 190
      },
      {
        "numberType": "INTEGER",
        "tokenType": "NUMBER_LITERAL",
        "tokenContent": "5",
        "start": 191,
        "end": 192
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 192,
        "end": 193
      },
      {
        "symbolType": "ASTERISK",
        "tokenType": "SYMBOL",
        "tokenContent": "*",
        "start": 194,
        "end": 195
      },
      {
        "numberType": "INTEGER",
        "tokenType": "NUMBER_LITERAL",
        "tokenContent": "2",
        "start": 196,
        "end": 197
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 197,
        "end": 198
      },
      {
        "symbolType": "CLOSING_BRACE",
        "tokenType": "SYMBOL",
        "tokenContent": "}",
        "start": 199,
        "end": 200
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 202,
        "end": 205
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "print_greet",
        "start": 206,
        "end": 217
      },
      {
        "symbolType": "LESS_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": "<",
        "start": 217,
        "end": 218
      },
      {
        "symbolType": "GREATER_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": ">",
        "start": 218,
        "end": 219
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 219,
        "end": 220
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test_argument",
        "start": 220,
        "end": 233
      },
      {
        "symbolType": "COLON",
        "tokenType": "SYMBOL",
        "tokenContent": ":",
        "start": 233,
        "end": 234
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 235,
        "end": 241
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 241,
        "end": 242
      },
      {
        "symbolType": "EQUAL",
        "tokenType": "SYMBOL",
        "tokenContent": "=",
        "start": 243,
        "end": 244
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "println",
        "start": 245,
        "end": 252
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 252,
        "end": 253
      },
      {
        "tokenType": "STRING_LITERAL",
        "tokenContent": "%s , %s",
        "start": 253,
        "end": 262
      },
      {
        "symbolType": "PERCENT",
        "tokenType": "SYMBOL",
        "tokenContent": "%",
        "start": 263,
        "end": 264
      },
      {
        "symbolType": "OPENING_BRACKET",
        "tokenType": "SYMBOL",
        "tokenContent": "[",
        "start": 265,
        "end": 266
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test_2",
        "start": 266,
        "end": 272
      },
      {
        "symbolType": "COMMA",
        "tokenType": "SYMBOL",
        "tokenContent": ",",
        "start": 272,
        "end": 273
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test_argument",
        "start": 274,
        "end": 287
      },
      {
        "symbolType": "CLOSING_BRACKET",
        "tokenType": "SYMBOL",
        "tokenContent": "]",
        "start": 287,
        "end": 288
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 288,
        "end": 289
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 289,
        "end": 290
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 292,
        "end": 295
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "greeting",
        "start": 296,
        "end": 304
      },
      {
        "symbolType": "LESS_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": "<",
        "start": 304,
        "end": 305
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 305,
        "end": 311
      },
      {
        "symbolType": "GREATER_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": ">",
        "start": 311,
        "end": 312
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 312,
        "end": 313
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 313,
        "end": 314
      },
      {
        "symbolType": "EQUAL",
        "tokenType": "SYMBOL",
        "tokenContent": "=",
        "start": 315,
        "end": 316
      },
      {
        "tokenType": "STRING_LITERAL",
        "tokenContent": "Hello World",
        "start": 317,
        "end": 330
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 330,
        "end": 331
      },
      {
        "tokenType": "END_OF_FILE",
        "tokenContent": "import \"test\"; \n\nvar test_1 = test.test();\nvar test_2 = this.greeting();\n\n# this method gets invoked first\nfun main<int>(args: string[]) {\n    this.print_greet(test_1);\n    return (20 + 10 * 5) * 2;\n}\n\nfun print_greet<>(test_argument: string) = println(\"%s , %s\" % [test_2, test_argument]);\n\nfun greeting<string>() = \"Hello World\";\n",
        "start": 0,
        "end": 332
      }
    ]
  },
  "syntaxAnalyzer": {
    "errorHandler": {},
    "position": 84,
    "rootAST": {
      "importStorage": [
        {
          "importFilePathToken": {
            "tokenType": "STRING_LITERAL",
            "tokenContent": "test",
            "start": 7,
            "end": 13
          },
          "importNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "test",
            "start": -1,
            "end": -1
          },
          "astType": "IMPORT_STATEMENT",
          "start": 0,
          "end": 0
        }
      ],
      "variableStorage": [
        {
          "variableNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "test_1",
            "start": 21,
            "end": 27
          },
          "abstractExpressionAST": {
            "abstractAST": {
              "abstractToken": {
                "invokedIdentifierNameToken": {
                  "tokenType": "IDENTIFIER",
                  "tokenContent": "test",
                  "start": 30,
                  "end": 34
                },
                "invokedIdentifierStatement": {
                  "invokedFunctionNameToken": {
                    "tokenType": "IDENTIFIER",
                    "tokenContent": "test",
                    "start": 35,
                    "end": 39
                  },
                  "invokedArguments": [],
                  "functionInvocationAccess": "EXPRESSION_INVOCATION",
                  "astType": "FUNCTION_INVOKE",
                  "start": 35,
                  "end": 0
                },
                "astType": "IDENTIFIER_INVOKE",
                "start": 30,
                "end": 35
              },
              "astType": "IDENTIFIER_INVOKE_OPERABLE",
              "start": 30,
              "end": 35
            },
            "astType": "EXPRESSION",
            "start": 30,
            "end": 35
          },
          "astType": "VARIABLE_DEFINITION",
          "start": 17,
          "end": 0
        },
        {
          "variableNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "test_2",
            "start": 47,
            "end": 53
          },
          "abstractExpressionAST": {
            "abstractAST": {
              "abstractToken": {
                "invokedFunctionNameToken": {
                  "tokenType": "IDENTIFIER",
                  "tokenContent": "greeting",
                  "start": 61,
                  "end": 69
                },
                "invokedArguments": [],
                "functionInvocationAccess": "EXPRESSION_INVOCATION",
                "astType": "FUNCTION_INVOKE",
                "start": 61,
                "end": 0
              },
              "astType": "FUNCTION_RESULT_OPERABLE",
              "start": 61,
              "end": 0
            },
            "astType": "EXPRESSION",
            "start": 61,
            "end": 0
          },
          "astType": "VARIABLE_DEFINITION",
          "start": 43,
          "end": 0
        }
      ],
      "functionStorage": [
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "main",
            "start": 111,
            "end": 115
          },
          "functionReturnTypeAST": {
            "typeKind": "INTEGER",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [
            {
              "argumentNameIdentifier": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "args",
                "start": 121,
                "end": 125
              },
              "argumentType": {
                "typeKind": "STRING",
                "isArray": true,
                "astType": "TYPE",
                "start": 0,
                "end": 0
              },
              "astType": "ARGUMENT_DEFINITION",
              "start": 121,
              "end": 0
            }
          ],
          "blockAST": {
            "blockType": "BLOCK",
            "blockStorage": [
              {
                "invokedFunctionNameToken": {
                  "tokenType": "IDENTIFIER",
                  "tokenContent": "print_greet",
                  "start": 148,
                  "end": 159
                },
                "invokedArguments": [
                  {
                    "abstractAST": {
                      "abstractToken": {
                        "calledIdentifierToken": {
                          "tokenType": "IDENTIFIER",
                          "tokenContent": "test_1",
                          "start": 160,
                          "end": 166
                        },
                        "astType": "IDENTIFIER_CALL",
                        "start": 160,
                        "end": 166
                      },
                      "astType": "IDENTIFIER_CALL_OPERABLE",
                      "start": 160,
                      "end": 166
                    },
                    "astType": "EXPRESSION",
                    "start": 160,
                    "end": 166
                  }
                ],
                "functionInvocationAccess": "BLOCK_INVOCATION",
                "astType": "FUNCTION_INVOKE",
                "start": 148,
                "end": 0
              },
              {
                "abstractExpressionAST": {
                  "abstractAST": {
                    "leftSideAST": {
                      "openParenthesisToken": {
                        "symbolType": "OPENING_PARENTHESIS",
                        "tokenType": "SYMBOL",
                        "tokenContent": "(",
                        "start": 180,
                        "end": 181
                      },
                      "abstractExpressionAST": {
                        "abstractAST": {
                          "leftSideAST": {
                            "abstractToken": {
                              "numberType": "INTEGER",
                              "tokenType": "NUMBER_LITERAL",
                              "tokenContent": "20",
                              "start": 181,
                              "end": 183
                            },
                            "astType": "NUMBER_OPERABLE",
                            "start": 181,
                            "end": 183
                          },
                          "binaryOperator": "ADDITION",
                          "rightSideAST": {
                            "leftSideAST": {
                              "abstractToken": {
                                "numberType": "INTEGER",
                                "tokenType": "NUMBER_LITERAL",
                                "tokenContent": "10",
                                "start": 186,
                                "end": 188
                              },
                              "astType": "NUMBER_OPERABLE",
                              "start": 186,
                              "end": 188
                            },
                            "binaryOperator": "MULTIPLICATION",
                            "rightSideAST": {
                              "abstractToken": {
                                "numberType": "INTEGER",
                                "tokenType": "NUMBER_LITERAL",
                                "tokenContent": "5",
                                "start": 191,
                                "end": 192
                              },
                              "astType": "NUMBER_OPERABLE",
                              "start": 191,
                              "end": 192
                            },
                            "astType": "BINARY_EXPRESSION",
                            "start": 186,
                            "end": 192
                          },
                          "astType": "BINARY_EXPRESSION",
                          "start": 181,
                          "end": 192
                        },
                        "astType": "EXPRESSION",
                        "start": 181,
                        "end": 192
                      },
                      "closeParenthesisToken": {
                        "symbolType": "CLOSING_PARENTHESIS",
                        "tokenType": "SYMBOL",
                        "tokenContent": ")",
                        "start": 192,
                        "end": 193
                      },
                      "astType": "PARENTHESIZED_EXPRESSION",
                      "start": 180,
                      "end": 193
                    },
                    "binaryOperator": "MULTIPLICATION",
                    "rightSideAST": {
                      "abstractToken": {
                        "numberType": "INTEGER",
                        "tokenType": "NUMBER_LITERAL",
                        "tokenContent": "2",
                        "start": 196,
                        "end": 197
                      },
                      "astType": "NUMBER_OPERABLE",
                      "start": 196,
                      "end": 197
                    },
                    "astType": "BINARY_EXPRESSION",
                    "start": 180,
                    "end": 197
                  },
                  "astType": "EXPRESSION",
                  "start": 180,
                  "end": 197
                },
                "astType": "RETURN_STATEMENT",
                "start": 173,
                "end": 0
              }
            ],
            "astType": "BLOCK",
            "start": 137,
            "end": 200
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 107,
          "end": 200
        },
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "print_greet",
            "start": 206,
            "end": 217
          },
          "functionReturnTypeAST": {
            "typeKind": "VOID",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [
            {
              "argumentNameIdentifier": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "test_argument",
                "start": 220,
                "end": 233
              },
              "argumentType": {
                "typeKind": "STRING",
                "isArray": false,
                "astType": "TYPE",
                "start": 0,
                "end": 0
              },
              "astType": "ARGUMENT_DEFINITION",
              "start": 220,
              "end": 0
            }
          ],
          "blockAST": {
            "blockType": "INLINE",
            "blockStorage": [
              {
                "abstractAST": {
                  "abstractToken": {
                    "invokedFunctionNameToken": {
                      "tokenType": "IDENTIFIER",
                      "tokenContent": "println",
                      "start": 245,
                      "end": 252
                    },
                    "invokedArguments": [
                      {
                        "abstractAST": {
                          "leftSideAST": {
                            "abstractToken": {
                              "tokenType": "STRING_LITERAL",
                              "tokenContent": "%s , %s",
                              "start": 253,
                              "end": 262
                            },
                            "astType": "STRING_OPERABLE",
                            "start": 253,
                            "end": 262
                          },
                          "binaryOperator": "MODULO",
                          "rightSideAST": {
                            "expressionASTs": [
                              {
                                "abstractAST": {
                                  "abstractToken": {
                                    "calledIdentifierToken": {
                                      "tokenType": "IDENTIFIER",
                                      "tokenContent": "test_2",
                                      "start": 266,
                                      "end": 272
                                    },
                                    "astType": "IDENTIFIER_CALL",
                                    "start": 266,
                                    "end": 272
                                  },
                                  "astType": "IDENTIFIER_CALL_OPERABLE",
                                  "start": 266,
                                  "end": 272
                                },
                                "astType": "EXPRESSION",
                                "start": 266,
                                "end": 272
                              },
                              {
                                "abstractAST": {
                                  "abstractToken": {
                                    "calledIdentifierToken": {
                                      "tokenType": "IDENTIFIER",
                                      "tokenContent": "test_argument",
                                      "start": 274,
                                      "end": 287
                                    },
                                    "astType": "IDENTIFIER_CALL",
                                    "start": 274,
                                    "end": 287
                                  },
                                  "astType": "IDENTIFIER_CALL_OPERABLE",
                                  "start": 274,
                                  "end": 287
                                },
                                "astType": "EXPRESSION",
                                "start": 274,
                                "end": 287
                              }
                            ],
                            "astType": "COLLECTION_OPERABLE",
                            "start": 0,
                            "end": 0
                          },
                          "astType": "BINARY_EXPRESSION",
                          "start": 253,
                          "end": 0
                        },
                        "astType": "EXPRESSION",
                        "start": 253,
                        "end": 0
                      }
                    ],
                    "functionInvocationAccess": "EXPRESSION_INVOCATION",
                    "astType": "FUNCTION_INVOKE",
                    "start": 245,
                    "end": 0
                  },
                  "astType": "FUNCTION_RESULT_OPERABLE",
                  "start": 245,
                  "end": 0
                },
                "astType": "EXPRESSION",
                "start": 245,
                "end": 0
              }
            ],
            "astType": "BLOCK",
            "start": 243,
            "end": 290
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 202,
          "end": 290
        },
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "greeting",
            "start": 296,
            "end": 304
          },
          "functionReturnTypeAST": {
            "typeKind": "STRING",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [],
          "blockAST": {
            "blockType": "INLINE",
            "blockStorage": [
              {
                "abstractAST": {
                  "abstractToken": {
                    "tokenType": "STRING_LITERAL",
                    "tokenContent": "Hello World",
                    "start": 317,
                    "end": 330
                  },
                  "astType": "STRING_OPERABLE",
                  "start": 317,
                  "end": 330
                },
                "astType": "EXPRESSION",
                "start": 317,
                "end": 330
              }
            ],
            "astType": "BLOCK",
            "start": 315,
            "end": 331
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 292,
          "end": 331
        }
      ],
      "astType": "ROOT",
      "start": 0,
      "end": 332
    }
  }
}{
  "content": "fun test<string>() = \" ehehe \";\n",
  "lexicalAnalyzer": {
    "errorHandler": {},
    "tokens": [
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 0,
        "end": 3
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "test",
        "start": 4,
        "end": 8
      },
      {
        "symbolType": "LESS_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": "<",
        "start": 8,
        "end": 9
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 9,
        "end": 15
      },
      {
        "symbolType": "GREATER_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": ">",
        "start": 15,
        "end": 16
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 16,
        "end": 17
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 17,
        "end": 18
      },
      {
        "symbolType": "EQUAL",
        "tokenType": "SYMBOL",
        "tokenContent": "=",
        "start": 19,
        "end": 20
      },
      {
        "tokenType": "STRING_LITERAL",
        "tokenContent": " ehehe ",
        "start": 21,
        "end": 30
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 30,
        "end": 31
      },
      {
        "tokenType": "END_OF_FILE",
        "tokenContent": "fun test<string>() = \" ehehe \";\n",
        "start": 0,
        "end": 32
      }
    ]
  },
  "syntaxAnalyzer": {
    "errorHandler": {},
    "position": 10,
    "rootAST": {
      "importStorage": [],
      "variableStorage": [],
      "functionStorage": [
        {
          "functionAnnotationASTs": [],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "test",
            "start": 4,
            "end": 8
          },
          "functionReturnTypeAST": {
            "typeKind": "STRING",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [],
          "blockAST": {
            "blockType": "INLINE",
            "blockStorage": [
              {
                "abstractAST": {
                  "abstractToken": {
                    "tokenType": "STRING_LITERAL",
                    "tokenContent": " ehehe ",
                    "start": 21,
                    "end": 30
                  },
                  "astType": "STRING_OPERABLE",
                  "start": 21,
                  "end": 30
                },
                "astType": "EXPRESSION",
                "start": 21,
                "end": 30
              }
            ],
            "astType": "BLOCK",
            "start": 19,
            "end": 31
          },
          "astType": "FUNCTION_DEFINITION",
          "start": 0,
          "end": 31
        }
      ],
      "astType": "ROOT",
      "start": 0,
      "end": 32
    }
  }
}{
  "content": "@native[default]\r\nfun println<>(message: string);\r\n",
  "lexicalAnalyzer": {
    "errorHandler": {},
    "tokens": [
      {
        "symbolType": "AT_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": "@",
        "start": 0,
        "end": 1
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "native",
        "start": 1,
        "end": 7
      },
      {
        "symbolType": "OPENING_BRACKET",
        "tokenType": "SYMBOL",
        "tokenContent": "[",
        "start": 7,
        "end": 8
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "default",
        "start": 8,
        "end": 15
      },
      {
        "symbolType": "CLOSING_BRACKET",
        "tokenType": "SYMBOL",
        "tokenContent": "]",
        "start": 15,
        "end": 16
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "fun",
        "start": 18,
        "end": 21
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "println",
        "start": 22,
        "end": 29
      },
      {
        "symbolType": "LESS_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": "<",
        "start": 29,
        "end": 30
      },
      {
        "symbolType": "GREATER_THAN_SIGN",
        "tokenType": "SYMBOL",
        "tokenContent": ">",
        "start": 30,
        "end": 31
      },
      {
        "symbolType": "OPENING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": "(",
        "start": 31,
        "end": 32
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "message",
        "start": 32,
        "end": 39
      },
      {
        "symbolType": "COLON",
        "tokenType": "SYMBOL",
        "tokenContent": ":",
        "start": 39,
        "end": 40
      },
      {
        "tokenType": "IDENTIFIER",
        "tokenContent": "string",
        "start": 41,
        "end": 47
      },
      {
        "symbolType": "CLOSING_PARENTHESIS",
        "tokenType": "SYMBOL",
        "tokenContent": ")",
        "start": 47,
        "end": 48
      },
      {
        "symbolType": "SEMICOLON",
        "tokenType": "SYMBOL",
        "tokenContent": ";",
        "start": 48,
        "end": 49
      },
      {
        "tokenType": "END_OF_FILE",
        "tokenContent": "@native[default]\r\nfun println<>(message: string);\r\n",
        "start": 0,
        "end": 51
      }
    ]
  },
  "syntaxAnalyzer": {
    "errorHandler": {},
    "position": 15,
    "rootAST": {
      "importStorage": [],
      "variableStorage": [],
      "functionStorage": [
        {
          "functionAnnotationASTs": [
            {
              "annotationName": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "native",
                "start": 1,
                "end": 7
              },
              "annotationArguments": [
                {
                  "tokenType": "IDENTIFIER",
                  "tokenContent": "default",
                  "start": 8,
                  "end": 15
                }
              ],
              "astType": "ANNOTATION",
              "start": 0,
              "end": 16
            }
          ],
          "functionNameToken": {
            "tokenType": "IDENTIFIER",
            "tokenContent": "println",
            "start": 22,
            "end": 29
          },
          "functionReturnTypeAST": {
            "typeKind": "VOID",
            "isArray": false,
            "astType": "TYPE",
            "start": 0,
            "end": 0
          },
          "functionArgumentASTs": [
            {
              "argumentNameIdentifier": {
                "tokenType": "IDENTIFIER",
                "tokenContent": "message",
                "start": 32,
                "end": 39
              },
              "argumentType": {
                "typeKind": "STRING",
                "isArray": false,
                "astType": "TYPE",
                "start": 0,
                "end": 0
              },
              "astType": "ARGUMENT_DEFINITION",
              "start": 32,
              "end": 0
            }
          ],
          "astType": "FUNCTION_DEFINITION",
          "start": 18,
          "end": 49
        }
      ],
      "astType": "ROOT",
      "start": 0,
      "end": 51
    }
  }
}